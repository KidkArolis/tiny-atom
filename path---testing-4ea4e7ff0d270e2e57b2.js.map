{"version":3,"sources":["webpack:///path---testing-4ea4e7ff0d270e2e57b2.js","webpack:///./.cache/json/testing.json"],"names":["webpackJsonp","346","module","exports","data","markdownRemark","html","excerpt","timeToRead","frontmatter","title","parent","__typename","relativePath","pathContext","slug"],"mappings":"AAAAA,cAAc,gBAERC,IACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,MAAQC,gBAAkBC,KAAA,uzcAA81dC,QAAA,8HAAAC,WAAA,EAAAC,aAAoPC,MAAA,WAAkBC,QAAWC,WAAA,OAAAC,aAAA,gBAAkDC,aAAgBC,KAAA","file":"path---testing-4ea4e7ff0d270e2e57b2.js","sourcesContent":["webpackJsonp([1641542509237],{\n\n/***/ 346:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"markdownRemark\":{\"html\":\"<p>An example of how you could go about unit testing individual actions. Say you have the following action:</p>\\n<p><strong>actions.js</strong></p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-js\\\"><code class=\\\"language-js\\\"><span class=\\\"token keyword\\\">const</span> axios <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">require</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'axios'</span><span class=\\\"token punctuation\\\">)</span>\\n\\nmodule<span class=\\\"token punctuation\\\">.</span>exports <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">{</span>\\n  fetchMetrics<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token keyword\\\">async</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span> <span class=\\\"token keyword\\\">get</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token keyword\\\">set</span><span class=\\\"token punctuation\\\">,</span> dispatch <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span> id<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">set</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span> loading<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token boolean\\\">true</span> <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span>\\n    <span class=\\\"token keyword\\\">try</span> <span class=\\\"token punctuation\\\">{</span>\\n      <span class=\\\"token keyword\\\">const</span> res <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">await</span> axios<span class=\\\"token punctuation\\\">.</span><span class=\\\"token keyword\\\">get</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'/metrics/'</span> <span class=\\\"token operator\\\">+</span> id<span class=\\\"token punctuation\\\">)</span>\\n      <span class=\\\"token keyword\\\">set</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span> loading<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token boolean\\\">false</span><span class=\\\"token punctuation\\\">,</span> metrics<span class=\\\"token punctuation\\\">:</span> res<span class=\\\"token punctuation\\\">.</span>data <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span>\\n    <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">catch</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token class-name\\\">err</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n      <span class=\\\"token keyword\\\">set</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span> loading<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token boolean\\\">false</span><span class=\\\"token punctuation\\\">,</span> error<span class=\\\"token punctuation\\\">:</span> err<span class=\\\"token punctuation\\\">.</span>message <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span>\\n      <span class=\\\"token function\\\">dispatch</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'trackError'</span><span class=\\\"token punctuation\\\">,</span> err<span class=\\\"token punctuation\\\">)</span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token punctuation\\\">}</span></code></pre>\\n      </div>\\n<p><strong>test.js</strong></p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-js\\\"><code class=\\\"language-js\\\"><span class=\\\"token keyword\\\">const</span> <span class=\\\"token punctuation\\\">{</span> deepEqual <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">require</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'assert'</span><span class=\\\"token punctuation\\\">)</span>\\n<span class=\\\"token keyword\\\">const</span> createAtom <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">require</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'tiny-atom'</span><span class=\\\"token punctuation\\\">)</span>\\n<span class=\\\"token keyword\\\">const</span> axios <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">require</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'axios'</span><span class=\\\"token punctuation\\\">)</span>\\n<span class=\\\"token keyword\\\">const</span> sinon <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">require</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'sinon'</span><span class=\\\"token punctuation\\\">)</span>\\n<span class=\\\"token keyword\\\">const</span> actions <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">require</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'./actions'</span><span class=\\\"token punctuation\\\">)</span>\\n\\n<span class=\\\"token function\\\">suite</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'actions'</span><span class=\\\"token punctuation\\\">)</span>\\n\\n<span class=\\\"token keyword\\\">let</span> changes\\n<span class=\\\"token keyword\\\">let</span> atom\\n\\n<span class=\\\"token comment\\\">// reusable setup</span>\\n<span class=\\\"token keyword\\\">function</span> <span class=\\\"token function\\\">setup</span> <span class=\\\"token punctuation\\\">(</span>actionType<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  changes <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token punctuation\\\">]</span>\\n  atom <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">createAtom</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span> actions<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token punctuation\\\">{</span> evolve <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span>\\n\\n  <span class=\\\"token keyword\\\">function</span> <span class=\\\"token function\\\">evolve</span> <span class=\\\"token punctuation\\\">(</span>atom<span class=\\\"token punctuation\\\">,</span> action<span class=\\\"token punctuation\\\">,</span> actions<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">const</span> <span class=\\\"token punctuation\\\">{</span> type<span class=\\\"token punctuation\\\">,</span> payload <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token operator\\\">=</span> action\\n    <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span>type <span class=\\\"token operator\\\">===</span> actionType<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n      actions<span class=\\\"token punctuation\\\">[</span>type<span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">(</span>atom<span class=\\\"token punctuation\\\">,</span> payload<span class=\\\"token punctuation\\\">)</span>\\n    <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">else</span> <span class=\\\"token punctuation\\\">{</span>\\n      changes<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">push</span><span class=\\\"token punctuation\\\">(</span>action<span class=\\\"token punctuation\\\">)</span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n\\n  atom<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">observe</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">function</span> <span class=\\\"token function\\\">onChange</span> <span class=\\\"token punctuation\\\">(</span>atom<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    changes<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">push</span><span class=\\\"token punctuation\\\">(</span>atom<span class=\\\"token punctuation\\\">.</span><span class=\\\"token keyword\\\">get</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span>\\n\\n  <span class=\\\"token keyword\\\">return</span> atom\\n<span class=\\\"token punctuation\\\">}</span>\\n\\n<span class=\\\"token function\\\">test</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'fetchMetrics success'</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token keyword\\\">async</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token function\\\">setup</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'fetchMetrics'</span><span class=\\\"token punctuation\\\">)</span>\\n\\n  sinon<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">stub</span><span class=\\\"token punctuation\\\">(</span>axios<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token string\\\">'get'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">callsFake</span><span class=\\\"token punctuation\\\">(</span>\\n    <span class=\\\"token punctuation\\\">(</span>path<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> Promise<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">resolve</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span> data<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">[</span>path<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token string\\\">'data'</span><span class=\\\"token punctuation\\\">]</span> <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span>\\n  <span class=\\\"token punctuation\\\">)</span>\\n\\n  <span class=\\\"token keyword\\\">await</span> atom<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">dispatch</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'fetchMetrics'</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token number\\\">57</span><span class=\\\"token punctuation\\\">)</span>\\n\\n  <span class=\\\"token comment\\\">// inspect each state change</span>\\n  <span class=\\\"token function\\\">deepEqual</span><span class=\\\"token punctuation\\\">(</span>changes<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token punctuation\\\">[</span>\\n    <span class=\\\"token punctuation\\\">{</span> loading<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token boolean\\\">true</span> <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n    <span class=\\\"token punctuation\\\">{</span> loading<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token boolean\\\">false</span><span class=\\\"token punctuation\\\">,</span> metrics<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token string\\\">'/metrics/57'</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token string\\\">'data'</span><span class=\\\"token punctuation\\\">]</span> <span class=\\\"token punctuation\\\">}</span>\\n  <span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">)</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span>\\n\\n<span class=\\\"token function\\\">test</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'fetchMetrics error'</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token keyword\\\">async</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token function\\\">setup</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'fetchMetrics'</span><span class=\\\"token punctuation\\\">)</span>\\n\\n  <span class=\\\"token keyword\\\">let</span> err <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">new</span> <span class=\\\"token class-name\\\">Error</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'Fetch failed'</span><span class=\\\"token punctuation\\\">)</span>\\n  sinon<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">stub</span><span class=\\\"token punctuation\\\">(</span>axios<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token string\\\">'get'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">callsFake</span><span class=\\\"token punctuation\\\">(</span>\\n    <span class=\\\"token punctuation\\\">(</span>path<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> Promise<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">reject</span><span class=\\\"token punctuation\\\">(</span>err<span class=\\\"token punctuation\\\">)</span>\\n  <span class=\\\"token punctuation\\\">)</span>\\n\\n  <span class=\\\"token keyword\\\">await</span> atom<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">dispatch</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'fetchMetrics'</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token number\\\">57</span><span class=\\\"token punctuation\\\">)</span>\\n\\n  <span class=\\\"token comment\\\">// inspect each state change and actions dispatched</span>\\n  <span class=\\\"token function\\\">deepEqual</span><span class=\\\"token punctuation\\\">(</span>changes<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token punctuation\\\">[</span>\\n    <span class=\\\"token punctuation\\\">{</span> loading<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token boolean\\\">true</span> <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n    <span class=\\\"token punctuation\\\">{</span> loading<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token boolean\\\">false</span><span class=\\\"token punctuation\\\">,</span> error<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'Fetch failed'</span> <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n    <span class=\\\"token punctuation\\\">{</span> seq<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">,</span> type<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'trackError'</span><span class=\\\"token punctuation\\\">,</span> payload<span class=\\\"token punctuation\\\">:</span> err <span class=\\\"token punctuation\\\">}</span>\\n  <span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">)</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span></code></pre>\\n      </div>\",\"excerpt\":\"An example of how you could go about unit testing individual actions. Say you have the following action: actions.js test.js\",\"timeToRead\":1,\"frontmatter\":{\"title\":\"Testing\"},\"parent\":{\"__typename\":\"File\",\"relativePath\":\"testing.md\"}}},\"pathContext\":{\"slug\":\"/testing/\"}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---testing-4ea4e7ff0d270e2e57b2.js","module.exports = {\"data\":{\"markdownRemark\":{\"html\":\"<p>An example of how you could go about unit testing individual actions. Say you have the following action:</p>\\n<p><strong>actions.js</strong></p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-js\\\"><code class=\\\"language-js\\\"><span class=\\\"token keyword\\\">const</span> axios <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">require</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'axios'</span><span class=\\\"token punctuation\\\">)</span>\\n\\nmodule<span class=\\\"token punctuation\\\">.</span>exports <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">{</span>\\n  fetchMetrics<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token keyword\\\">async</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span> <span class=\\\"token keyword\\\">get</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token keyword\\\">set</span><span class=\\\"token punctuation\\\">,</span> dispatch <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span> id<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">set</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span> loading<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token boolean\\\">true</span> <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span>\\n    <span class=\\\"token keyword\\\">try</span> <span class=\\\"token punctuation\\\">{</span>\\n      <span class=\\\"token keyword\\\">const</span> res <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">await</span> axios<span class=\\\"token punctuation\\\">.</span><span class=\\\"token keyword\\\">get</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'/metrics/'</span> <span class=\\\"token operator\\\">+</span> id<span class=\\\"token punctuation\\\">)</span>\\n      <span class=\\\"token keyword\\\">set</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span> loading<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token boolean\\\">false</span><span class=\\\"token punctuation\\\">,</span> metrics<span class=\\\"token punctuation\\\">:</span> res<span class=\\\"token punctuation\\\">.</span>data <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span>\\n    <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">catch</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token class-name\\\">err</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n      <span class=\\\"token keyword\\\">set</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span> loading<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token boolean\\\">false</span><span class=\\\"token punctuation\\\">,</span> error<span class=\\\"token punctuation\\\">:</span> err<span class=\\\"token punctuation\\\">.</span>message <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span>\\n      <span class=\\\"token function\\\">dispatch</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'trackError'</span><span class=\\\"token punctuation\\\">,</span> err<span class=\\\"token punctuation\\\">)</span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token punctuation\\\">}</span></code></pre>\\n      </div>\\n<p><strong>test.js</strong></p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-js\\\"><code class=\\\"language-js\\\"><span class=\\\"token keyword\\\">const</span> <span class=\\\"token punctuation\\\">{</span> deepEqual <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">require</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'assert'</span><span class=\\\"token punctuation\\\">)</span>\\n<span class=\\\"token keyword\\\">const</span> createAtom <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">require</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'tiny-atom'</span><span class=\\\"token punctuation\\\">)</span>\\n<span class=\\\"token keyword\\\">const</span> axios <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">require</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'axios'</span><span class=\\\"token punctuation\\\">)</span>\\n<span class=\\\"token keyword\\\">const</span> sinon <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">require</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'sinon'</span><span class=\\\"token punctuation\\\">)</span>\\n<span class=\\\"token keyword\\\">const</span> actions <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">require</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'./actions'</span><span class=\\\"token punctuation\\\">)</span>\\n\\n<span class=\\\"token function\\\">suite</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'actions'</span><span class=\\\"token punctuation\\\">)</span>\\n\\n<span class=\\\"token keyword\\\">let</span> changes\\n<span class=\\\"token keyword\\\">let</span> atom\\n\\n<span class=\\\"token comment\\\">// reusable setup</span>\\n<span class=\\\"token keyword\\\">function</span> <span class=\\\"token function\\\">setup</span> <span class=\\\"token punctuation\\\">(</span>actionType<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  changes <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token punctuation\\\">]</span>\\n  atom <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">createAtom</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span> actions<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token punctuation\\\">{</span> evolve <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span>\\n\\n  <span class=\\\"token keyword\\\">function</span> <span class=\\\"token function\\\">evolve</span> <span class=\\\"token punctuation\\\">(</span>atom<span class=\\\"token punctuation\\\">,</span> action<span class=\\\"token punctuation\\\">,</span> actions<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">const</span> <span class=\\\"token punctuation\\\">{</span> type<span class=\\\"token punctuation\\\">,</span> payload <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token operator\\\">=</span> action\\n    <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span>type <span class=\\\"token operator\\\">===</span> actionType<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n      actions<span class=\\\"token punctuation\\\">[</span>type<span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">(</span>atom<span class=\\\"token punctuation\\\">,</span> payload<span class=\\\"token punctuation\\\">)</span>\\n    <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">else</span> <span class=\\\"token punctuation\\\">{</span>\\n      changes<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">push</span><span class=\\\"token punctuation\\\">(</span>action<span class=\\\"token punctuation\\\">)</span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n\\n  atom<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">observe</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">function</span> <span class=\\\"token function\\\">onChange</span> <span class=\\\"token punctuation\\\">(</span>atom<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    changes<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">push</span><span class=\\\"token punctuation\\\">(</span>atom<span class=\\\"token punctuation\\\">.</span><span class=\\\"token keyword\\\">get</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span>\\n\\n  <span class=\\\"token keyword\\\">return</span> atom\\n<span class=\\\"token punctuation\\\">}</span>\\n\\n<span class=\\\"token function\\\">test</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'fetchMetrics success'</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token keyword\\\">async</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token function\\\">setup</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'fetchMetrics'</span><span class=\\\"token punctuation\\\">)</span>\\n\\n  sinon<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">stub</span><span class=\\\"token punctuation\\\">(</span>axios<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token string\\\">'get'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">callsFake</span><span class=\\\"token punctuation\\\">(</span>\\n    <span class=\\\"token punctuation\\\">(</span>path<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> Promise<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">resolve</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span> data<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">[</span>path<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token string\\\">'data'</span><span class=\\\"token punctuation\\\">]</span> <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span>\\n  <span class=\\\"token punctuation\\\">)</span>\\n\\n  <span class=\\\"token keyword\\\">await</span> atom<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">dispatch</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'fetchMetrics'</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token number\\\">57</span><span class=\\\"token punctuation\\\">)</span>\\n\\n  <span class=\\\"token comment\\\">// inspect each state change</span>\\n  <span class=\\\"token function\\\">deepEqual</span><span class=\\\"token punctuation\\\">(</span>changes<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token punctuation\\\">[</span>\\n    <span class=\\\"token punctuation\\\">{</span> loading<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token boolean\\\">true</span> <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n    <span class=\\\"token punctuation\\\">{</span> loading<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token boolean\\\">false</span><span class=\\\"token punctuation\\\">,</span> metrics<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token string\\\">'/metrics/57'</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token string\\\">'data'</span><span class=\\\"token punctuation\\\">]</span> <span class=\\\"token punctuation\\\">}</span>\\n  <span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">)</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span>\\n\\n<span class=\\\"token function\\\">test</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'fetchMetrics error'</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token keyword\\\">async</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token function\\\">setup</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'fetchMetrics'</span><span class=\\\"token punctuation\\\">)</span>\\n\\n  <span class=\\\"token keyword\\\">let</span> err <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">new</span> <span class=\\\"token class-name\\\">Error</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'Fetch failed'</span><span class=\\\"token punctuation\\\">)</span>\\n  sinon<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">stub</span><span class=\\\"token punctuation\\\">(</span>axios<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token string\\\">'get'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">callsFake</span><span class=\\\"token punctuation\\\">(</span>\\n    <span class=\\\"token punctuation\\\">(</span>path<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> Promise<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">reject</span><span class=\\\"token punctuation\\\">(</span>err<span class=\\\"token punctuation\\\">)</span>\\n  <span class=\\\"token punctuation\\\">)</span>\\n\\n  <span class=\\\"token keyword\\\">await</span> atom<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">dispatch</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'fetchMetrics'</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token number\\\">57</span><span class=\\\"token punctuation\\\">)</span>\\n\\n  <span class=\\\"token comment\\\">// inspect each state change and actions dispatched</span>\\n  <span class=\\\"token function\\\">deepEqual</span><span class=\\\"token punctuation\\\">(</span>changes<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token punctuation\\\">[</span>\\n    <span class=\\\"token punctuation\\\">{</span> loading<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token boolean\\\">true</span> <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n    <span class=\\\"token punctuation\\\">{</span> loading<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token boolean\\\">false</span><span class=\\\"token punctuation\\\">,</span> error<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'Fetch failed'</span> <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n    <span class=\\\"token punctuation\\\">{</span> seq<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">,</span> type<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'trackError'</span><span class=\\\"token punctuation\\\">,</span> payload<span class=\\\"token punctuation\\\">:</span> err <span class=\\\"token punctuation\\\">}</span>\\n  <span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">)</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span></code></pre>\\n      </div>\",\"excerpt\":\"An example of how you could go about unit testing individual actions. Say you have the following action: actions.js test.js\",\"timeToRead\":1,\"frontmatter\":{\"title\":\"Testing\"},\"parent\":{\"__typename\":\"File\",\"relativePath\":\"testing.md\"}}},\"pathContext\":{\"slug\":\"/testing/\"}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/testing.json\n// module id = 346\n// module chunks = 1641542509237"],"sourceRoot":""}