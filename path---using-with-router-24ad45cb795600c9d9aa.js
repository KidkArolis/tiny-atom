webpackJsonp([0xa54b7e309aae],{350:function(n,s){n.exports={data:{markdownRemark:{html:'<p>The URL is part of your app’s state, but it’s stored and rendered by the browser. A good way of integrating seamlessly with this extra state is with two way binding between the url (or your router) and atom.</p>\n<p>The url and all url changes are sent to <code class="language-text">atom</code>. Therefore url changes rerender the app. Navigations are done by sending actions to <code class="language-text">atom</code>, which actually updates the <code class="language-text">router</code>, which then updates <code class="language-text">atom</code> state.</p>\n<p>Here’s how it looks with <a href="https://github.com/KidkArolis/space-router" target="_blank" rel="nofollow noopener noreferrer">space-router</a>.</p>\n<div class="gatsby-highlight">\n      <pre class="language-js"><code class="language-js"><span class="token keyword">const</span> Preact <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">\'preact\'</span><span class="token punctuation">)</span>\n<span class="token keyword">const</span> createAtom <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">\'tiny-atom\'</span><span class="token punctuation">)</span>\n<span class="token keyword">const</span> createRouter <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">\'space-router\'</span><span class="token punctuation">)</span>\n<span class="token keyword">const</span> <span class="token punctuation">{</span> Consumer <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">\'tiny-atom/preact\'</span><span class="token punctuation">)</span>\n\n<span class="token keyword">const</span> router <span class="token operator">=</span> <span class="token function">createRouter</span><span class="token punctuation">(</span><span class="token punctuation">[</span>\n  <span class="token punctuation">[</span><span class="token string">\'/\'</span><span class="token punctuation">,</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">\'./Main\'</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token punctuation">[</span><span class="token string">\'/space\'</span><span class="token punctuation">,</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">\'./Space\'</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n<span class="token punctuation">]</span><span class="token punctuation">)</span>\n\n<span class="token keyword">const</span> atom <span class="token operator">=</span> <span class="token function">createAtom</span><span class="token punctuation">(</span><span class="token punctuation">{</span> count<span class="token punctuation">:</span> <span class="token number">0</span> <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>\n  increment<span class="token punctuation">:</span> <span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">,</span> <span class="token keyword">set</span> <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token keyword">set</span><span class="token punctuation">(</span><span class="token punctuation">{</span> count<span class="token punctuation">:</span> <span class="token keyword">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>count <span class="token operator">+</span> <span class="token number">1</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n  navigate<span class="token punctuation">:</span> <span class="token punctuation">(</span>atom<span class="token punctuation">,</span> route<span class="token punctuation">)</span> <span class="token operator">=></span> router<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>route<span class="token punctuation">.</span>path<span class="token punctuation">,</span> route<span class="token punctuation">)</span><span class="token punctuation">,</span>\n  navigated<span class="token punctuation">:</span> <span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token keyword">set</span> <span class="token punctuation">}</span><span class="token punctuation">,</span> route<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token keyword">set</span><span class="token punctuation">(</span><span class="token punctuation">{</span> route <span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n\n<span class="token keyword">const</span> <span class="token function-variable function">App</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span>\n  <span class="token operator">&lt;</span>Consumer map<span class="token operator">=</span><span class="token punctuation">{</span>state <span class="token operator">=></span> state<span class="token punctuation">.</span>route<span class="token punctuation">}</span><span class="token operator">></span>\n    <span class="token punctuation">{</span><span class="token punctuation">(</span>route<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n      <span class="token keyword">const</span> <span class="token punctuation">[</span> Component <span class="token punctuation">]</span> <span class="token operator">=</span> router<span class="token punctuation">.</span><span class="token function">data</span><span class="token punctuation">(</span>route<span class="token punctuation">.</span>pattern<span class="token punctuation">)</span>\n      <span class="token keyword">return</span> <span class="token operator">&lt;</span>Component <span class="token operator">/</span><span class="token operator">></span>\n    <span class="token punctuation">}</span><span class="token punctuation">}</span>\n  <span class="token operator">&lt;</span><span class="token operator">/</span>Consumer<span class="token operator">></span>\n<span class="token punctuation">)</span>\n\nPreact<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span><span class="token operator">&lt;</span>App <span class="token operator">/</span><span class="token operator">></span><span class="token punctuation">,</span> document<span class="token punctuation">.</span>body<span class="token punctuation">,</span> document<span class="token punctuation">.</span>body<span class="token punctuation">.</span>lastElementChild<span class="token punctuation">)</span>\n\n<span class="token comment">// start routing, and store route on each url change</span>\nrouter<span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">(</span>route<span class="token punctuation">)</span> <span class="token operator">=></span> atom<span class="token punctuation">.</span><span class="token function">dispatch</span><span class="token punctuation">(</span><span class="token string">\'navigated\'</span><span class="token punctuation">,</span> route<span class="token punctuation">)</span><span class="token punctuation">)</span></code></pre>\n      </div>\n<p>For a more thorough example and for reusable prepackaged solution, see <a href="https://github.com/KidkArolis/moonwave" target="_blank" rel="nofollow noopener noreferrer">moonwave</a> - a small web application framework based on <strong>Tiny Atom</strong>.</p>',excerpt:"The URL is part of your app’s state, but it’s stored and rendered by the browser. A good way of integrating seamlessly with this extra state…",timeToRead:1,frontmatter:{title:"Using with router"},parent:{__typename:"File",relativePath:"using-with-router.md"}}},pathContext:{slug:"/using-with-router/"}}}});
//# sourceMappingURL=path---using-with-router-24ad45cb795600c9d9aa.js.map