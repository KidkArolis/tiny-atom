webpackJsonp([49118234725270],{521:function(n,s){n.exports={data:{markdownRemark:{html:'<p>In principle, you donâ€™t need to use any extra components to utilise atom in your React application. The simplest way to use atom is to pass <code>state</code> and <code>split</code> to your app as props: <code>&#x3C;App atom={atom.get()} split={atom.split} /></code>.</p>\n<p><strong>Note</strong>: the reason we name the first prop <code>atom</code> and not <code>state</code> is to avoid confusing <code>this.state</code> with <code>this.props.state</code>. The reason we pass <code>atom.get()</code> instead of the whole atom is to be able to utilise <code>componentShouldUpdate</code> and other lifecycle hooks. It can be useful in these hooks to inspect the current state and next state.</p>\n<p>While a lot of the time passing atom around as props can be enough, <strong>Tiny Atom</strong> comes with two React components <code>ProvideAtom</code> and <code>ConnectAtom</code> to make working with atom easier in deeply nested applications.</p>\n<ul>\n<li><code>&#x3C;ProvideAtom atom={atom} /></code> takes atom as a prop and provides it via context to the nested components.</li>\n<li><code>&#x3C;ConnectAtom map={(state, split)} render={props => (...)} /></code> takes an optional <code>map</code> prop that transforms the <code>state</code> and <code>split</code> into props for the nested component. If not provided, the entire <code>state</code> and <code>split</code> is passed as props to the nested component. The <code>render</code> prop takes a function that is called to render the connected child component.</li>\n</ul>\n<p>Following is an example putting it all together.</p>\n<p><strong>index.js</strong></p>\n<div class="gatsby-highlight">\n      <pre class="language-js"><code><span class="token keyword">const</span> React <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">\'react\'</span><span class="token punctuation">)</span>\n<span class="token keyword">const</span> ReactDOM <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">\'react-dom\'</span><span class="token punctuation">)</span>\n<span class="token keyword">const</span> createAtom <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">\'tiny-atom\'</span><span class="token punctuation">)</span>\n<span class="token keyword">const</span> <span class="token punctuation">{</span> ProvideAtom <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">\'tiny-atom/react\'</span><span class="token punctuation">)</span>\n<span class="token keyword">const</span> log <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">\'tiny-atom/log\'</span><span class="token punctuation">)</span>\n<span class="token keyword">const</span> actions <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">\'./actions\'</span><span class="token punctuation">)</span>\n<span class="token keyword">const</span> App <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">\'./App\'</span><span class="token punctuation">)</span>\n\n<span class="token comment">// create the atom</span>\n<span class="token keyword">const</span> atom <span class="token operator">=</span> <span class="token function">createAtom</span><span class="token punctuation">(</span><span class="token punctuation">{</span> count<span class="token punctuation">:</span> <span class="token number">0</span> <span class="token punctuation">}</span><span class="token punctuation">,</span> evolve<span class="token punctuation">,</span> render<span class="token punctuation">,</span> <span class="token punctuation">{</span>\n  debug<span class="token punctuation">:</span> log\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n\n<span class="token comment">// a pretty typical evolver that calls the action handlers</span>\n<span class="token keyword">function</span> <span class="token function">evolve</span> <span class="token punctuation">(</span><span class="token keyword">get</span><span class="token punctuation">,</span> split<span class="token punctuation">,</span> action<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  actions<span class="token punctuation">[</span>action<span class="token punctuation">.</span>type<span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token keyword">get</span><span class="token punctuation">,</span> split<span class="token punctuation">,</span> action<span class="token punctuation">.</span>payload<span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\n\n<span class="token comment">// wrap the rendering into a function for atom to call</span>\n<span class="token keyword">function</span> <span class="token function">render</span> <span class="token punctuation">(</span>atom<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  ReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">(</span>\n    <span class="token operator">&lt;</span>ProvideAtom atom<span class="token operator">=</span><span class="token punctuation">{</span>atom<span class="token punctuation">}</span><span class="token operator">></span>\n      <span class="token operator">&lt;</span>App <span class="token operator">/</span><span class="token operator">></span>\n    <span class="token operator">&lt;</span><span class="token operator">/</span>ProvideAtom<span class="token operator">></span>\n  <span class="token punctuation">)</span><span class="token punctuation">,</span> document<span class="token punctuation">.</span>body<span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\n\n<span class="token comment">// initial render</span>\n<span class="token function">render</span><span class="token punctuation">(</span>atom<span class="token punctuation">)</span>\n</code></pre>\n      </div>\n<p><strong>actions.js</strong></p>\n<div class="gatsby-highlight">\n      <pre class="language-js"><code>module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  increment<span class="token punctuation">:</span> <span class="token punctuation">(</span><span class="token keyword">get</span><span class="token punctuation">,</span> split<span class="token punctuation">,</span> payload<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    <span class="token function">split</span><span class="token punctuation">(</span><span class="token punctuation">{</span> count<span class="token punctuation">:</span> <span class="token keyword">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>count <span class="token operator">+</span> payload <span class="token punctuation">}</span><span class="token punctuation">)</span>\n    <span class="token function">split</span><span class="token punctuation">(</span><span class="token string">\'track\'</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> event<span class="token punctuation">:</span> <span class="token string">\'increment\'</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n\n  decrement<span class="token punctuation">:</span> <span class="token punctuation">(</span><span class="token keyword">get</span><span class="token punctuation">,</span> split<span class="token punctuation">,</span> payload<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    <span class="token function">split</span><span class="token punctuation">(</span><span class="token punctuation">{</span> count<span class="token punctuation">:</span> <span class="token keyword">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>count <span class="token operator">-</span> payload <span class="token punctuation">}</span><span class="token punctuation">)</span>\n    <span class="token function">split</span><span class="token punctuation">(</span><span class="token string">\'track\'</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> event<span class="token punctuation">:</span> <span class="token string">\'decrement\'</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n\n  track<span class="token punctuation">:</span> <span class="token punctuation">(</span><span class="token keyword">get</span><span class="token punctuation">,</span> split<span class="token punctuation">,</span> payload<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    <span class="token function">ga</span><span class="token punctuation">(</span><span class="token string">\'send\'</span><span class="token punctuation">,</span> payload<span class="token punctuation">)</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre>\n      </div>\n<p><strong>App.js</strong></p>\n<div class="gatsby-highlight">\n      <pre class="language-js"><code><span class="token keyword">const</span> React <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">\'react\'</span><span class="token punctuation">)</span>\n<span class="token keyword">const</span> Header <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">\'./Header\'</span><span class="token punctuation">)</span>\n<span class="token keyword">const</span> <span class="token punctuation">{</span> ConnectAtom <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">\'tiny-atom/react\'</span><span class="token punctuation">)</span>\n\n<span class="token keyword">const</span> <span class="token function-variable function">mapAtom</span> <span class="token operator">=</span> <span class="token punctuation">(</span>state<span class="token punctuation">,</span> split<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span><span class="token punctuation">{</span>\n  count<span class="token punctuation">:</span> state<span class="token punctuation">.</span>count<span class="token punctuation">,</span>\n  doubleCount<span class="token punctuation">:</span> state<span class="token punctuation">.</span>count <span class="token operator">*</span> <span class="token number">2</span><span class="token punctuation">,</span>\n  inc<span class="token punctuation">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token function">split</span><span class="token punctuation">(</span><span class="token string">\'increment\'</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n  dec<span class="token punctuation">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token function">split</span><span class="token punctuation">(</span><span class="token string">\'decrement\'</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n\nmodule<span class="token punctuation">.</span><span class="token function-variable function">exports</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span>\n  <span class="token operator">&lt;</span>ConnectAtom map<span class="token operator">=</span><span class="token punctuation">{</span>mapAtom<span class="token punctuation">}</span> render<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token punctuation">{</span> count<span class="token punctuation">,</span> doubleCount<span class="token punctuation">,</span> inc<span class="token punctuation">,</span> dec <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span>\n    <span class="token operator">&lt;</span>div<span class="token operator">></span>\n      <span class="token operator">&lt;</span>Header title<span class="token operator">=</span><span class="token string">\'Counter\'</span> <span class="token operator">/</span><span class="token operator">></span>\n      <span class="token operator">&lt;</span>div<span class="token operator">></span>times one<span class="token punctuation">:</span> <span class="token punctuation">{</span>count<span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>\n      <span class="token operator">&lt;</span>div<span class="token operator">></span>times two<span class="token punctuation">:</span> <span class="token punctuation">{</span>doubleCount<span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>\n      <span class="token operator">&lt;</span>button onClick<span class="token operator">=</span><span class="token punctuation">{</span>inc<span class="token punctuation">}</span><span class="token operator">></span>Increment<span class="token operator">&lt;</span><span class="token operator">/</span>button<span class="token operator">></span>\n      <span class="token operator">&lt;</span>button onClick<span class="token operator">=</span><span class="token punctuation">{</span>dec<span class="token punctuation">}</span><span class="token operator">></span>Decrement<span class="token operator">&lt;</span><span class="token operator">/</span>button<span class="token operator">></span>\n    <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>\n  <span class="token punctuation">)</span><span class="token punctuation">}</span> <span class="token operator">/</span><span class="token operator">></span>\n<span class="token punctuation">)</span>\n</code></pre>\n      </div>\n<p><strong>Header.js</strong></p>\n<div class="gatsby-highlight">\n      <pre class="language-js"><code><span class="token keyword">const</span> React <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">\'react\'</span><span class="token punctuation">)</span>\n<span class="token keyword">const</span> <span class="token punctuation">{</span> ConnectAtom <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">\'tiny-atom/react\'</span><span class="token punctuation">)</span>\n\nmodule<span class="token punctuation">.</span><span class="token function-variable function">exports</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">{</span> title <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span>\n  <span class="token operator">&lt;</span>ConnectAtom render<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token punctuation">{</span> state<span class="token punctuation">,</span> split <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span>\n    <span class="token operator">&lt;</span>div onClick<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token function">split</span><span class="token punctuation">(</span><span class="token string">\'increment\'</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token operator">></span>\n      <span class="token punctuation">{</span>title<span class="token punctuation">}</span>\n    <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>\n  <span class="token punctuation">)</span><span class="token punctuation">}</span> <span class="token operator">/</span><span class="token operator">></span>\n<span class="token punctuation">)</span>\n</code></pre>\n      </div>',excerpt:"In principle, you donâ€™t need to use any extra components to utilise atom in your React application. The simplest way to use atom is to passâ€¦",timeToRead:2,frontmatter:{title:"Using with React"},parent:{__typename:"File",relativePath:"using-with-react.md"}}},pathContext:{slug:"/using-with-react/"}}}});
//# sourceMappingURL=path---using-with-react-31046b560a9c9b0ac634.js.map