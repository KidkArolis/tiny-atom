webpackJsonp([45796974899352],{523:function(n,a){n.exports={data:{markdownRemark:{html:'<p><a href="https://zaphod.surge.sh/" target="_blank" rel="nofollow noopener noreferrer">Zaphod</a> is a really neat library for updating plain JavaScript objects in immutable ways. In particular functions like <code>get</code>, <code>getIn</code>, <code>set</code>, <code>setIn</code>, <code>unset</code>, <code>update</code>, <code>updateIn</code>, <code>push</code>, <code>pop</code>, <code>merge</code> all make it quite easy to update your state without mutating it. It’s a great alternative to libraries such as Immutable.js. While Immutable is great - it has a fairly large API surface and conceals data within custom objects making it harder to debug. We all wish JavaScript supported immutable data structures natively, but good ol plain JavaScript data structures can be more than enough. And libraries like <code>Zaphod</code> make it a joy to work with them.</p>\n<p><strong>actions.js</strong></p>\n<div class="gatsby-highlight">\n      <pre class="language-js"><code><span class="token keyword">const</span> <span class="token punctuation">{</span> getIn<span class="token punctuation">,</span> setIn<span class="token punctuation">,</span> updateIn<span class="token punctuation">,</span> merge <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">\'zaphod/compat\'</span><span class="token punctuation">)</span>\n\nmodule<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  fetchMoreItems<span class="token punctuation">:</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token keyword">get</span><span class="token punctuation">,</span> split<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    <span class="token comment">// check if we\'re already loading</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">getIn</span><span class="token punctuation">(</span><span class="token keyword">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string">\'feed\'</span><span class="token punctuation">,</span> <span class="token string">\'loading\'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">return</span>\n\n    <span class="token comment">// set loading true</span>\n    <span class="token function">split</span><span class="token punctuation">(</span><span class="token function">setIn</span><span class="token punctuation">(</span><span class="token keyword">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string">\'feed\'</span><span class="token punctuation">,</span> <span class="token string">\'loading\'</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n\n    <span class="token comment">// get next page cursor and fetch the data</span>\n    <span class="token keyword">const</span> nextPage <span class="token operator">=</span> <span class="token function">getIn</span><span class="token punctuation">(</span><span class="token keyword">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string">\'feed\'</span><span class="token punctuation">,</span> <span class="token string">\'nextPage\'</span><span class="token punctuation">]</span><span class="token punctuation">)</span>\n    <span class="token keyword">const</span> <span class="token punctuation">{</span> data <span class="token punctuation">}</span> <span class="token operator">=</span> axios<span class="token punctuation">.</span><span class="token keyword">get</span><span class="token punctuation">(</span><span class="token string">\'/feed?page=\'</span> <span class="token operator">+</span> nextPage<span class="token punctuation">)</span>\n\n    <span class="token comment">// merge the newly loaded items into the feed</span>\n    <span class="token function">split</span><span class="token punctuation">(</span><span class="token function">updateIn</span><span class="token punctuation">(</span><span class="token keyword">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string">\'feed\'</span><span class="token punctuation">]</span><span class="token punctuation">,</span> feed <span class="token operator">=></span> <span class="token function">merge</span><span class="token punctuation">(</span>feed<span class="token punctuation">,</span> <span class="token punctuation">{</span>\n      loading<span class="token punctuation">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>\n      nextPage<span class="token punctuation">:</span> data<span class="token punctuation">.</span>nextPage<span class="token punctuation">,</span>\n      items<span class="token punctuation">:</span> feed<span class="token punctuation">.</span>items<span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span>data<span class="token punctuation">.</span>items<span class="token punctuation">)</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\n</code></pre>\n      </div>',excerpt:"Zaphod  is a really neat library for updating plain JavaScript objects in immutable ways. In particular functions like  get ,  getIn ,  set…",timeToRead:1,frontmatter:{title:"Using with Zaphod"},parent:{__typename:"File",relativePath:"using-with-zaphod.md"}}},pathContext:{slug:"/using-with-zaphod/"}}}});
//# sourceMappingURL=path---using-with-zaphod-13d8080f1b12df5822cc.js.map